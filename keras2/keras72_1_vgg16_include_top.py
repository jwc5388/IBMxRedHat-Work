import numpy as np
from keras.models import Sequential
from keras.layers import Dense
import tensorflow as tf

import random

SEED = 333
random.seed(SEED)
np.random.seed(SEED)
tf.random.set_seed(SEED)

from keras.applications import VGG16, VGG19, ResNet50, ResNet50V2, ResNet101
from keras.applications import ResNet152, ResNet152V2, DenseNet121, DenseNet169
from keras.applications import DenseNet201, InceptionV3, InceptionResNetV2


#Default


# model = VGG16(weights='imagenet',
#               include_top=True,
#               input_shape=(224,224,3))

# model.summary()


# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
# ┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
# ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
# │ input_layer (InputLayer)             │ (None, 224, 224, 3)         │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block1_conv1 (Conv2D)                │ (None, 224, 224, 64)        │           1,792 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block1_conv2 (Conv2D)                │ (None, 224, 224, 64)        │          36,928 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block1_pool (MaxPooling2D)           │ (None, 112, 112, 64)        │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤


# │ block2_conv1 (Conv2D)                │ (None, 112, 112, 128)       │          73,856 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block2_conv2 (Conv2D)                │ (None, 112, 112, 128)       │         147,584 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block2_pool (MaxPooling2D)           │ (None, 56, 56, 128)         │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤


# │ block3_conv1 (Conv2D)                │ (None, 56, 56, 256)         │         295,168 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block3_conv2 (Conv2D)                │ (None, 56, 56, 256)         │         590,080 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block3_conv3 (Conv2D)                │ (None, 56, 56, 256)         │         590,080 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block3_pool (MaxPooling2D)           │ (None, 28, 28, 256)         │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤


# │ block4_conv1 (Conv2D)                │ (None, 28, 28, 512)         │       1,180,160 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block4_conv2 (Conv2D)                │ (None, 28, 28, 512)         │       2,359,808 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block4_conv3 (Conv2D)                │ (None, 28, 28, 512)         │       2,359,808 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block4_pool (MaxPooling2D)           │ (None, 14, 14, 512)         │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤


# │ block5_conv1 (Conv2D)                │ (None, 14, 14, 512)         │       2,359,808 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block5_conv2 (Conv2D)                │ (None, 14, 14, 512)         │       2,359,808 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block5_conv3 (Conv2D)                │ (None, 14, 14, 512)         │       2,359,808 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ block5_pool (MaxPooling2D)           │ (None, 7, 7, 512)           │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤


# │ flatten (Flatten)                    │ (None, 25088)               │               0 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ fc1 (Dense)                          │ (None, 4096)                │     102,764,544 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ fc2 (Dense)                          │ (None, 4096)                │      16,781,312 │
# ├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
# │ predictions (Dense)                  │ (None, 1000)                │       4,097,000 │
# └──────────────────────────────────────┴─────────────────────────────┴─────────────────┘


# model = VGG16()


# model = VGG16(weights='imagenet',
#               include_top=False,
#               input_shape=(32,32,3))

# model.summary()


model = VGG16(weights='imagenet',
              include_top=False,
              input_shape=(100,100,3))

model.summary()



##############include_top = False###############

#1. input_shape를 우리가 훈련 시킬 데이터의 shape로 수정
# FC layer 없어짐 (직접 아래에 fc layer 붙여주면 됨.)


